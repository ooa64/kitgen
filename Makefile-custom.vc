!if exists(..\..\Makefile-local.vc)
!include "..\..\Makefile-local.vc"
!endif

!if "$(CUSTOM:tbcload=)" != "$(CUSTOM)"

tbcload: $(BUILD)\lib\tbcload1.7.2\tbcload172$X.lib

$(BUILD)\lib\tbcload1.7.2\tbcload172$X.lib:
	-md $(BUILD)\tbcload
	pushd ..\..\8.x\tbcload\win & $(MAKE) -f Makefile.vc \
	  INSTALLDIR=$(BUILD) TCLDIR=$(BUILD)\..\..\tcl OPTS=$(OPTS) TMP_DIR=$(BUILD)\tbcload \
	  OUT_DIR=$(BUILD)\tbcload default-target install

LIBS = $(LIBS) $(BUILD)\tbcload\tbcload172$X.lib
CFLAGS=$(CFLAGS) -DKIT_INCLUDES_TBCLOAD=1

!endif

!if "$(CUSTOM:tdom=)" != "$(CUSTOM)"

tdom: $(BUILD)\lib\tdom0.9.5\tdom095$X.lib
$(BUILD)\lib\tdom0.9.5\tdom095$X.lib:
	-md $(BUILD)\tls
	pushd ..\..\8.x\tdom\win & $(MAKE) -f Makefile.vc \
	  INSTALLDIR=$(BUILD) OPTS=$(OPTS) TMP_DIR=$(BUILD)\tdom \
	  OUT_DIR=$(BUILD)\tdom default-target install

LIBS = $(LIBS) $(BUILD)\lib\tdom0.9.5\tdom095$X.lib
CFLAGS=$(CFLAGS) -DKIT_INCLUDES_TDOM=1

!endif

!if "$(CUSTOM:tls=)" != "$(CUSTOM)"

!if $(SYMBOLS)
SSLX=d
!endif

tls: $(BUILD)\lib\tls1.7.22\tls1722$X.lib
$(BUILD)\lib\tls1.7.22\tls1722$X.lib:
	-md $(BUILD)\tls
	pushd ..\..\8.x\tls\win & $(MAKE) -f Makefile.vc \
	  INSTALLDIR=$(BUILD) OPTS=$(OPTS) TMP_DIR=$(BUILD)\tls \
	  OUT_DIR=$(BUILD)\tls SSL_INSTALL_FOLDER=$(SSLROOT) default-target install

TLS_LIBS = \
	$(SSLROOT)\lib\VC\static\libssl64MD$(SSLX).lib \
	$(SSLROOT)\lib\VC\static\libcrypto64MD$(SSLX).lib \
	Crypt32.lib

LIBS = $(LIBS) $(BUILD)\lib\tls1.7.22\tls1722$X.lib $(TLS_LIBS)
CFLAGS=$(CFLAGS) -DKIT_INCLUDES_TLS=1

!endif

!if "$(CUSTOM:yajltcl=)" != "$(CUSTOM)"

!ifndef YAJLROOT
YAYLROOT=\yajl-2.1.1
!endif

yajltcl: $(BUILD)\lib\yajltcl1.7.0\yajltcl170$X.lib
$(BUILD)\lib\yajltcl1.7.0\yajltcl170$X.lib:
	-md $(BUILD)\yajltcl
	pushd ..\..\8.x\yajltcl\win & $(MAKE) -f Makefile.vc \
	  INSTALLDIR=$(BUILD) OPTS=$(OPTS) TMP_DIR=$(BUILD)\yajltcl \
	  OUT_DIR=$(BUILD)\yajltcl release install

YAJL_LIBS = $(YAJLROOT)\lib\yajl_s.lib

LIBS = $(LIBS) $(BUILD)\lib\yajltcl1.7.0\yajltcl170*.lib /NODEFAULTLIB:LIBCMT $(YAJL_LIBS)
#LIBS = $(LIBS) $(BUILD)\lib\yajltcl1.7.0\yajltcl170*.lib $(YAJL_LIBS)
CFLAGS=$(CFLAGS) -DKIT_INCLUDES_YAJLTCL=1

!endif

!if "$(CUSTOM:tcltdjson=)" != "$(CUSTOM)"

tcltdjson: $(BUILD)\lib\tcltdjson0.1\tcltdjson01$X.lib
$(BUILD)\lib\tcltdjson0.1\tcltdjson01$X.lib: zlib
	-md $(BUILD)\tcltdjson
	pushd ..\..\8.x\tcltdjson\win & $(MAKE) -f Makefile.vc \
	  INSTALLDIR=$(BUILD) OPTS=$(OPTS) TMP_DIR=$(BUILD)\tcltdjson \
	  OUT_DIR=$(BUILD)\tcltdjson TDSTATIC=1 default-target install

TDLIB_LIBS = \
	$(TDROOT)\lib\tdjson_static.lib \
	$(TDROOT)\lib\tdjson_private.lib \
	$(TDROOT)\lib\tdclient.lib \
	$(TDROOT)\lib\tdcore.lib \
	$(TDROOT)\lib\tdnet.lib \
	$(TDROOT)\lib\tdactor.lib \
	$(TDROOT)\lib\tddb.lib \
	$(TDROOT)\lib\tdsqlite.lib \
	$(TDROOT)\lib\tdapi.lib \
	$(TDROOT)\lib\tdutils.lib \
	$(SSLROOT)\lib\VC\static\libssl64MD$(SSLX).lib \
	$(SSLROOT)\lib\VC\static\libcrypto64MD$(SSLX).lib \
	$(BUILD)\..\..\..\8.x\zlib\zlib.lib \
 	ws2_32.lib Crypt32.lib Normaliz.lib psapi.lib

LIBS = $(LIBS) $(BUILD)\lib\tcltdjson0.1\tcltdjson01*.lib $(TDLIB_LIBS)
CFLAGS=$(CFLAGS) -DKIT_INCLUDES_TCLTDJSON=1

!endif

!if "$(CUSTOM:tclcsv=)" != "$(CUSTOM)"

tclcsv: $(BUILD)\lib\tclcsv2.4.3\tclcsv243$X.lib

$(BUILD)\lib\tclcsv2.4.3\tclcsv243$X.lib:
	-md $(BUILD)\tclcsv
	pushd ..\..\8.x\tclcsv\win & $(MAKE) -f Makefile.vc \
	  INSTALLDIR=$(BUILD) OPTS=$(OPTS) TMP_DIR=$(BUILD)\tclcsv \
	  OUT_DIR=$(BUILD)\tclcsv default-target install

LIBS = $(LIBS) $(BUILD)\tclcsv\tclcsv243$X.lib
CFLAGS=$(CFLAGS) -DKIT_INCLUDES_TCLCSV=1

!endif

!if "$(CUSTOM:tcldbf=)" != "$(CUSTOM)"

tcldbf: $(BUILD)\lib\tcldbf2.1.0\tcldbf210$X.lib

$(BUILD)\lib\tcldbf2.1.0\tcldbf210$X.lib:
	-md $(BUILD)\tcldbf
	pushd ..\..\8.x\tcldbf\win & $(MAKE) -f Makefile.vc \
	  INSTALLDIR=$(BUILD) OPTS=$(OPTS) TMP_DIR=$(BUILD)\tcldbf \
	  OUT_DIR=$(BUILD)\tcldbf default-target install

LIBS = $(LIBS) $(BUILD)\tcldbf\tcldbf210$X.lib
CFLAGS=$(CFLAGS) -DKIT_INCLUDES_TCLDBF=1

!endif

!if "$(CUSTOM:xlsreader=)" != "$(CUSTOM)"

xlsreader: $(BUILD)\lib\xlsreader1.0.1\xlsreader101$X.lib

$(BUILD)\lib\xlsreader1.0.1\xlsreader101$X.lib:
	-md $(BUILD)\xlsreader
	pushd ..\..\8.x\tclxlsreader\win & $(MAKE) -f Makefile.vc \
	  INSTALLDIR=$(BUILD) OPTS=$(OPTS) TMP_DIR=$(BUILD)\tclcsv \
	  OUT_DIR=$(BUILD)\xlsreader default-target install

LIBS = $(LIBS) $(BUILD)\xlsreader\xlsreader101$X.lib
CFLAGS=$(CFLAGS) -DKIT_INCLUDES_XLSREADER=1

!endif

!if "$(CUSTOM:parser=)" != "$(CUSTOM)"

parser: $(BUILD)\lib\tclparser1.9\tclparser19$X.lib

$(BUILD)\lib\tclparser1.9\tclparser19$X.lib:
	-md $(BUILD)\tclparser
	pushd ..\..\8.x\tclprodebug\lib\tclparser\win & $(MAKE) -f Makefile.vc \
	  INSTALLDIR=$(BUILD) TCLDIR=$(BUILD)\..\..\tcl OPTS=$(OPTS) TMP_DIR=$(BUILD)\tclparser \
	  OUT_DIR=$(BUILD)\tclparser default-target install

LIBS = $(LIBS) $(BUILD)\tclparser\tclparser19$X.lib
CFLAGS=$(CFLAGS) -DKIT_INCLUDES_TCLPARSER=1

!endif
