!if "$(CUSTOM:tcltls=)" != "$(CUSTOM)"

!if $(SYMBOLS)
SSLX=d
!endif

tcltls: $(BUILD)\lib\tls1.7.22\tls1722$X.lib
$(BUILD)\lib\tls1.7.22\tls1722$X.lib:
	-md $(BUILD)\tcltls
	pushd ..\..\8.x\tcltls\win & $(MAKE) -f Makefile.vc \
	  INSTALLDIR=$(BUILD) OPTS=$(OPTS) TMP_DIR=$(BUILD)\tcltls \
	  OUT_DIR=$(BUILD)\tcltls SSL_INSTALL_FOLDER=$(SSLROOT) default-target install

TCLTLS_LIBS = \
	$(SSLROOT)\lib\VC\static\libssl64MD$(SSLX).lib \
	$(SSLROOT)\lib\VC\static\libcrypto64MD$(SSLX).lib \
	Crypt32.lib

LIBS = $(LIBS) $(BUILD)\lib\tls1.7.22\tls1722$X.lib $(TCLTLS_LIBS)
CFLAGS=$(CFLAGS) -DKIT_INCLUDES_TCLTLS=1

!endif

!if "$(CUSTOM:yajltcl=)" != "$(CUSTOM)"

!ifndef YAJLROOT
YAYLROOT=\yajl-2.1.1
!endif

yajltcl: $(BUILD)\lib\yajltcl1.7.0\yajltcl170$X.lib
$(BUILD)\lib\yajltcl1.7.0\yajltcl170$X.lib:
	-md $(BUILD)\yajltcl
	pushd ..\..\8.x\yajltcl\win & $(MAKE) -f Makefile.vc \
	  INSTALLDIR=$(BUILD) OPTS=$(OPTS) TMP_DIR=$(BUILD)\yajltcl \
	  OUT_DIR=$(BUILD)\yajltcl release install

YAJL_LIBS = $(YAJLROOT)\lib\yajl_s.lib

LIBS = $(LIBS) $(BUILD)\lib\yajltcl1.7.0\yajltcl170*.lib /NODEFAULTLIB:LIBCMT $(YAJL_LIBS)
#LIBS = $(LIBS) $(BUILD)\lib\yajltcl1.7.0\yajltcl170*.lib $(YAJL_LIBS)
CFLAGS=$(CFLAGS) -DKIT_INCLUDES_YAJLTCL=1

!endif

!if "$(CUSTOM:tcltdjson=)" != "$(CUSTOM)"

tcltdjson: $(BUILD)\lib\tcltdjson0.1\tcltdjson01$X.lib
$(BUILD)\lib\tcltdjson0.1\tcltdjson01$X.lib:
	-md $(BUILD)\tcltdjson
	pushd ..\..\8.x\tcltdjson\win & $(MAKE) -f Makefile.vc \
	  INSTALLDIR=$(BUILD) OPTS=$(OPTS) TMP_DIR=$(BUILD)\tcltdjson \
	  OUT_DIR=$(BUILD)\tcltdjson TDSTATIC=1 default-target install

TDLIB_LIBS = \
	$(TDROOT)\lib\tdjson_static.lib \
	$(TDROOT)\lib\tdjson_private.lib \
	$(TDROOT)\lib\tdclient.lib \
	$(TDROOT)\lib\tdcore.lib \
	$(TDROOT)\lib\tdnet.lib \
	$(TDROOT)\lib\tdactor.lib \
	$(TDROOT)\lib\tddb.lib \
	$(TDROOT)\lib\tdsqlite.lib \
	$(TDROOT)\lib\tdapi.lib \
	$(TDROOT)\lib\tdutils.lib \
	$(SSLROOT)\lib\VC\static\libssl64MD$(SSLX).lib \
	$(SSLROOT)\lib\VC\static\libcrypto64MD$(SSLX).lib \
	$(BUILD)\..\..\..\8.x\zlib\zlib.lib \
 	ws2_32.lib Crypt32.lib Normaliz.lib psapi.lib

LIBS = $(LIBS) $(BUILD)\lib\tcltdjson0.1\tcltdjson01*.lib $(TDLIB_LIBS)
CFLAGS=$(CFLAGS) -DKIT_INCLUDES_TCLTDJSON=1

!endif
